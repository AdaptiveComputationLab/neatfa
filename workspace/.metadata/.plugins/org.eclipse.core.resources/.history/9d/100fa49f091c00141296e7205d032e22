#include "NavigationData.h"

NavigationData::NavigationData() {
	// TODO Auto-generated constructor stub
}

NavigationData::~NavigationData() {
	// TODO Auto-generated destructor stub
}

bool NavigationData::CollisionDetection(const CCI_FootBotProximitySensor::TReadings& proximityReadings) {
	CVector2 accumulator;

	for(size_t i = 0; i < proximityReadings.size(); ++i) {
        accumulator += CVector2(proximityReadings[i].Value, proximityReadings[i].Angle);
	}

	accumulator /= proximityReadings.size();
	CRadians angle = accumulator.Angle();

	if(angleTolerance.WithinMinBoundIncludedMaxBoundIncluded(angle) &&
	   accumulator.Length() < distanceTolerance) {
		steeringActuator->SetLinearVelocity(maxSpeed, maxSpeed);
		return false; // collision not detected
	} else {
		if(angle.GetValue() > 0.0) {
			steeringActuator->SetLinearVelocity(maxSpeed, 0.0);
		} else {
			steeringActuator->SetLinearVelocity(0.0, maxSpeed);
		}
		return true; // collision detected
	}
}
